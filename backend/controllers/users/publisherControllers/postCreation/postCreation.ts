import { NextFunction } from "express";
import { GoogleGenerativeAI } from "@google/generative-ai";
import resultPromptSchema from "./sectionPromptSchema/result-prompt-schema";
import admitCardPromptSchema from "./sectionPromptSchema/admit-card-prompt-schema";
import latestJobPromptSchema from "./sectionPromptSchema/latest-job-prompt-schema";
import syllabusPromptSchema from "./sectionPromptSchema/syllabus-prompt-schema";
import answerKeyPromptSchema from "./sectionPromptSchema/answer-key-prompt-schema";
import certificateVerificatePromptSchema from "./sectionPromptSchema/certificate-verificate-prompt-schema";
import importantPromptSchema from "./sectionPromptSchema/important-prompt-schema";
import admissionPromptSchema from "./sectionPromptSchema/admission-prompt-schema";

interface ISectionPromptSchema {
  [key: string]: { [key: string]: any };
}

export const sectionPromptSchema: ISectionPromptSchema = {
  result: resultPromptSchema,
  admit_card: admitCardPromptSchema,
  latest_job: latestJobPromptSchema,
  syllabus: syllabusPromptSchema,
  answer_key: answerKeyPromptSchema,
  certificate_verification: certificateVerificatePromptSchema,
  important: importantPromptSchema,
  admission: admissionPromptSchema,
};

const postCreation = async (
  nameOfThePost: string,
  schema: { [key: string]: any },
  next: NextFunction
) => {
  try {
    // if ((schema = {})) return {};
    const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY || "");

    const model = genAI.getGenerativeModel({
      model: "gemini-1.5-pro",
      generationConfig: {
        responseMimeType: "application/json",
        responseSchema: schema,
      },
    });

    const prompt = `Generate a comprehensive and engaging post for the "${nameOfThePost}"`;
    const result = await model.generateContent(prompt);
    const generatedContent = result.response.text();
    console.log("generated content", generatedContent);
    // Validate JSON format
    try {
      const parsedContent = JSON.parse(generatedContent);
      return parsedContent;
    } catch (syntaxError) {
      console.error(
        "JSON Syntax Error in generated content:",
        generatedContent
      );
      // throw new HttpError("Invalid JSON generated by AI", 500);
    }
  } catch (error) {
    console.error("Error generating post content:", error);
    // throw new HttpError("Failed to generate post content", 500);
  }
};

export default postCreation;
